syntax = "proto3";

package restaurant_rpc;
option go_package = "restaurant_backend/rpc;restaurant_rpc";

import "google/protobuf/empty.proto";
import "common.proto";
import "restaurantV2/types.proto";

message Dish {
    uint32 id = 1;
    string name = 2;
    string imageUrl = 3;
    DishType dishType = 4;
    repeated DishPortion portions = 5;
}

message DishPortion {
    uint32 id = 1;
    string name = 2;
    string price = 3; // 价格, 以字符串传输避免精度丢失
    restaurant.DishPortion portionType = 4; // 份量
    Recipe recipe = 5;
}

message Recipe {
    uint32 id = 1;
    repeated RecipeMaterial materials = 2;
}

message RecipeMaterial {
    uint32 id = 1;
    Material material = 2;
    string quantity = 3;
}

message Material {
    uint32 id = 1;
    string name = 2;
    string price = 3; // 配料单价
    restaurant.UnitType unitType = 4; // 配料单位
    string amount = 5; // 总量
}

/// 座位
message Seat {
    uint32 id = 1;
    uint32 tableId = 2;
    string seatNumber = 3;
}

/// 餐桌
message Table {
    uint32 id = 1;
    string number = 2;
    repeated Seat seats = 3;
}

message GetDishesReq {
    PageInfo pageInfo = 1;
    string keywords = 2;
}

message GetDishesResp {
    repeated Dish dishes = 1;
    PageInfo pageInfo = 2;
}

message DishType {
    uint32 dishTypeID = 1;
    string Name = 2;
}

message GetDishTypeResp {
    repeated DishType dishTypes = 1;
}

message AddDishTypeReq {
    string typeName = 1;
}

message AddDishTypeResp {
    uint32 dishTypeID = 1;
    string typeName = 2;
}

message GetMaterialsReq {
    PageInfo pageInfo = 1;
    string keywords = 2;
}

message GetMaterialsResp {
    repeated Material materialList = 1;
    PageInfo pageInfo = 2;
}

message CreateOrEditMaterialReq{
    Material material = 1;
}

message CreateOrEditMaterialResp {
    uint32 materialId = 1;
}

message CreateOrEditDishReq {
    Dish dish = 1;
}

message GetDishesWithCategoryReq {
    PageInfo pageInfo = 1;
    DishType category = 2;
}

message GetDishesWithCategoryResp {
    repeated Dish dishes = 1;
    PageInfo pageInfo = 2;
    DishType category = 3;
}

message DeleteDishesReq {
    repeated uint32 dishIds = 1;
}

message GetAllTablesResp {
    repeated Table tables = 1;
}

message CreateOrEditTableReq {
    Table table = 1;
}

message DeleteTableReq {
    uint32 tableId = 1;
}

/// 订单基本组成部分
message OrderItem {
    uint32 dishId = 1;
    uint32 portionId = 2;
    uint32 count = 3;
}

/// 下订单请求
message PlaceOrderReq {
    repeated OrderItem orderItems = 1;
    restaurant.OrderType orderType = 2; // 订单类型
    string address = 3; // 订单地址, 仅外卖订单有该字段
    Table table = 4; // 桌号, 仅堂食订单有该字段
}

message OrderInfoItem {
    uint32 dishId = 1;
    uint32 portionId = 2;
    uint32 count = 3;
    Dish dish = 4;
    DishPortion portion = 5;
}

/**
订单信息
 */
message OrderInfo {
    uint32 orderId = 1;
    restaurant.OrderType orderType = 2;
    Table table = 3;
    int64 createdAt = 4;
    repeated OrderInfoItem orderInfoItems = 5;
    string totalPrice = 6;
    uint32 customerId = 7;
}

message GetOrderInfoReq {
    uint32 orderId = 1;
}

message GetOrderInfoResp {
    OrderInfo orderInfo = 1;
}

/// 订单简略信息
message OrderSimpleInfo {
    uint32 orderId = 1; // 订单ID
    string totalPrice = 2; // 订单总价
    int64 createdAt = 3; // 订单创建时间
}

message GetAllOrdersResp {
    repeated OrderSimpleInfo orderInfoList = 1;
}

service DishService {
    rpc GetDishes(GetDishesReq) returns (GetDishesResp);
    rpc GetDishType(google.protobuf.Empty) returns (GetDishTypeResp);
    rpc AddDishType(AddDishTypeReq) returns (AddDishTypeResp);
    rpc GetMaterials(GetMaterialsReq) returns (GetMaterialsResp);
    rpc CreateOrEditMaterial(CreateOrEditMaterialReq) returns (CreateOrEditMaterialResp);
    rpc CreateOrEditDish(CreateOrEditDishReq) returns (google.protobuf.Empty);
    rpc GetDishesWithCategory(GetDishesWithCategoryReq) returns (GetDishesWithCategoryResp);
    rpc DeleteDishes(DeleteDishesReq) returns (google.protobuf.Empty);
    rpc GetAllTables(google.protobuf.Empty) returns (GetAllTablesResp);
    rpc CreateOrEditTable(CreateOrEditTableReq) returns (google.protobuf.Empty);
    rpc DeleteTable(DeleteTableReq) returns (google.protobuf.Empty);
    rpc PlaceOrder(PlaceOrderReq) returns(google.protobuf.Empty);
    rpc GetOrderInfo(GetOrderInfoReq) returns (GetOrderInfoResp);
    rpc GetAllOrders(google.protobuf.Empty) returns (GetAllOrdersResp);
}